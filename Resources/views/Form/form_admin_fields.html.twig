{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends 'SonataAdminBundle:Form:form_admin_fields.html.twig' %}


{# Custom Sonata Admin Extension #}
{% block sonata_admin_orm_one_to_one_widget %}
    {% include 'SonataDoctrineORMAdminBundle:CRUD:edit_orm_one_to_one.html.twig' %}
{% endblock %}

{% block sonata_admin_orm_many_to_many_widget %}
    {% include 'SonataDoctrineORMAdminBundle:CRUD:edit_orm_many_to_many.html.twig' %}
{% endblock %}

{% block sonata_admin_orm_many_to_one_widget %}
    {% include 'SonataDoctrineORMAdminBundle:CRUD:edit_orm_many_to_one.html.twig' %}
{% endblock %}

{% block sonata_admin_orm_one_to_many_widget %}
    {% include 'SonataDoctrineORMAdminBundle:CRUD:edit_orm_one_to_many.html.twig' %}
{% endblock %}

{% block sonata_type_model_widget %}
    {#
        This is not the best way to do if
        TODO : improve this part
    #}

    {#model {{ sonata_admin.field_description.mappingtype }}#}

    {% if sonata_admin.field_description is empty %}
        {{ block('choice_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == constant('Doctrine\\ORM\\Mapping\\ClassMetadataInfo::ONE_TO_ONE') %}
        {{ block('sonata_admin_orm_one_to_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == constant('Doctrine\\ORM\\Mapping\\ClassMetadataInfo::MANY_TO_ONE') %}
        {{ block('sonata_admin_orm_many_to_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == constant('Doctrine\\ORM\\Mapping\\ClassMetadataInfo::MANY_TO_MANY') %}
        {{ block('sonata_admin_orm_many_to_many_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == constant('Doctrine\\ORM\\Mapping\\ClassMetadataInfo::ONE_TO_MANY') %}
        {{ block('sonata_admin_orm_one_to_many_widget') }}
    {% else %}
        {#INVALID MODE : {{ id }}#}
        {{ block('choice_widget') }}
    {% endif %}
{% endblock %}

{% block sonata_type_model_list_widget %}
    {% set field_description = sonata_admin.field_description %}
    {% set associationadmin = field_description.associationadmin %}
    {# prepare the JSON data for the action buttons #}
    {% set json_field_description = sonata_field_description_json() %}

    <div id="field_container_{{ id }}" class="field-container">

        <span id="field_widget_{{ id }}" class="field-short-description">
            {% if associationadmin.id(sonata_admin.value) %}
                {{ render(path('sonata_admin_short_object_information', {
                    'code':     associationadmin.code,
                    'objectId': associationadmin.id(sonata_admin.value),
                    'uniqid':   associationadmin.uniqid,
                    'linkParameters': field_description.options.link_parameters
                })) }}
            {% elseif field_description.options.placeholder is defined and field_description.options.placeholder %}
                <span class="inner-field-short-description">
                    {{ field_description.options.placeholder|trans({}, 'SonataAdminBundle') }}
                </span>
            {% endif %}
        </span>

        <span id="field_actions_{{ id }}" class="field-actions">
            <span class="btn-group">
                {% if associationadmin.hasroute('show') and associationadmin.isGranted('VIEW') and btn_show %}
                    <a  role="button" href="#"
                        class="btn btn-info btn-sm sonata-ba-action"
                        data-field-action="show-association"
                        data-field-description="{{ json_field_description }}"
                        title="{{ btn_show|trans({}, btn_catalogue) }}"
                    >
                        <i class="fa fa-eye"></i>
                        <span>{{ btn_show|trans({}, btn_catalogue) }}</span>
                    </a>
                {% endif %}
                {% if associationadmin.hasroute('list') and associationadmin.isGranted('LIST') and btn_list %}
                    <a  href="{{ associationadmin.generateUrl('list') }}"
                        class="btn btn-info btn-sm sonata-ba-action"
                        data-field-action="list-association"
                        data-field-description="{{ json_field_description }}"
                        title="{{ btn_list|trans({}, btn_catalogue) }}"
                    >
                        <i class="fa fa-list"></i>
                        <span>{{ btn_list|trans({}, btn_catalogue) }}</span>
                    </a>
                {% endif %}
                {% if associationadmin.hasroute('edit') and associationadmin.isGranted('EDIT') and btn_edit %}
                    <a  role="button" href="#"
                        class="btn btn-success btn-sm sonata-ba-action"
                        data-field-action="edit-association"
                        data-field-description="{{ json_field_description }}"
                        title="{{ btn_edit|trans({}, btn_catalogue) }}"
                    >
                        <i class="fa fa-pencil"></i>
                        <span>{{ btn_edit|trans({}, btn_catalogue) }}</span>
                    </a>
                {% endif %}
                {% if associationadmin.hasroute('create') and associationadmin.isGranted('CREATE') and btn_add %}
                    <a  href="{{ associationadmin.generateUrl('create') }}"
                        class="btn btn-success btn-sm sonata-ba-action"
                        data-field-action="create-association"
                        data-field-description="{{ json_field_description }}"
                        title="{{ btn_add|trans({}, btn_catalogue) }}"
                    >
                        <i class="fa fa-plus-circle"></i>
                        <span>{{ btn_add|trans({}, btn_catalogue) }}</span>
                    </a>
                {% endif %}
            </span>

            <span class="btn-group">
                {% if associationadmin.hasRoute('delete') and associationadmin.isGranted('DELETE') and btn_delete %}
                    <a  role="button" href="#"
                        class="btn btn-danger btn-sm sonata-ba-action"
                        data-field-action="remove-association"
                        data-field-description="{{ json_field_description }}"
                        title="{{ btn_delete|trans({}, btn_catalogue) }}"
                    >
                        <i class="fa fa-minus-circle"></i>
                        <span>{{ btn_delete|trans({}, btn_catalogue) }}</span>
                    </a>
                {% endif %}
            </span>
        </span>

        <span style="display: none">
            {# Hidden text input cannot be required, because browser will throw error "An invalid form control with name='' is not focusable"  #}
            {{ form_widget(form, {'required':false}) }}
        </span>

        {{ block('sonata_help') }}

    </div>

{% endblock %}

{% block sonata_type_admin_widget %}
    {% if sonata_admin.field_description.mappingtype == constant('Doctrine\\ORM\\Mapping\\ClassMetadataInfo::ONE_TO_ONE') %}
        {{ block('sonata_admin_orm_one_to_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == constant('Doctrine\\ORM\\Mapping\\ClassMetadataInfo::MANY_TO_ONE') %}
        {{ block('sonata_admin_orm_many_to_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == constant('Doctrine\\ORM\\Mapping\\ClassMetadataInfo::MANY_TO_MANY') %}
        {{ block('sonata_admin_orm_many_to_many_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == constant('Doctrine\\ORM\\Mapping\\ClassMetadataInfo::ONE_TO_MANY') %}
        {{ block('sonata_admin_orm_one_to_many_widget') }}
    {% else %}
        INVALID MODE : {{ id }}
    {% endif %}
{% endblock %}

{% block sonata_type_collection_widget %}
    {% if sonata_admin.field_description.mappingtype == constant('Doctrine\\ORM\\Mapping\\ClassMetadataInfo::ONE_TO_MANY') %}
        {{ block('sonata_admin_orm_one_to_many_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == constant('Doctrine\\ORM\\Mapping\\ClassMetadataInfo::MANY_TO_MANY') %}
        {{ block('sonata_admin_orm_many_to_many_widget') }}
    {% else %}
        INVALID MODE : {{ id }} - type : sonata_type_collection - mapping : {{ sonata_admin.field_description.mappingtype }}
    {% endif %}
{% endblock %}
